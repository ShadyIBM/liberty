Login to openshift
oc login <openshift-cluster-url> --token=<your-token>

CD to namespaces directory
kubectl apply -k .

Create Argocd instance in UI
Get Argocd sercret from secrets/argocd-cluster

Deploy argocd applications
CD to argocd directory
kubectl apply -k .

kubectl apply -k . -n openshift-gitops




Change github repo detail in bootstrap/bootstrap.yaml

oc login <openshift-cluster-url> --token=<your-token>

oc new-project liberty-project



kubectl delete -k .

oc apply -f jpa20cdiwar.yaml
oc delete -f jpa20cdiwar.yaml

#to see ehat happens if you apply without actually applyig the changes
kubectl apply -k . --dry-run=client

install Argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

kubectl patch app jpa20cdiwar -n argocd --type='json' -p='[{"op": "replace", "path": "/spec/syncPolicy", "value":{"automated": {}}}]'



apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: argocd
  namespace: openshift-operators 
spec:
  controller:
    resources:
      limits:
        cpu: 2000m
        memory: 2048Mi
      requests:
        cpu: 250m
        memory: 1024Mi
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  server:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
  rbac:
    policy: |
      p, role:admin, clusters, get, *, allow

  # Add this part to enable cluster-scoped mode
  clusterConfig:
    enabled: true

  sso:
    dex:
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
    provider: dex

